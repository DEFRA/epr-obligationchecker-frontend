trigger:
  branches:
    include:
      - '*'
  paths:
    include:
      - 'src/'

parameters:

  - name: sonarqubeInstance
    displayName: 'Select SonarQube version'
    type: string
    default: 'SonarQube'
    values:
    - 'SonarQube'
    # - 'SonarQubeLatest'


pool: DEFRA-COMMON-ubuntu2004-SSV3

variables:
  - template: vars/DEV4-development.yaml
  - name: solutionFolder
    value: src
  - name: projectFolder
    value: FrontendObligationChecker
  - name: testProjectFolder
    value: FrontendObligationChecker.UnitTests
  - name: sonarQubeProjectKey
    value: frontend-obligationchecker-microservice
  - name: sonarQubeProjectName
    value: frontend-obligationchecker-microservice
  - name: runNugetTasks
    value: false
  - name: runTests
    value: true
  - name: dotnetVersion
    value: dotnetVersion8

resources:
  repositories:
    - repository: CommonTemplates
      name: RWD-CPR-EPR4P-ADO/epr-webapps-code-deploy-templates
      type: git
      ref: main
      
extends:
  template: epr-build-pipeline.yaml@CommonTemplates
  parameters:
    solutionFolder: ${{ variables.solutionFolder }}
    projectFolder: ${{ variables.projectFolder }}
    testProjectFolder: ${{ variables.testProjectFolder }}
    sonarQubeProjectKey: ${{ variables.sonarQubeProjectKey }}
    sonarQubeProjectName: ${{ variables.sonarQubeProjectName }}
    runTests: ${{variables.runTests}}
    azureSubscription: $(azureSubscription)
    acrAzureContainerRegistryName: $(acr.azureContainerRegistryName)
    acrRepositoryName: $(acr.repositoryName)
    branchName: ${{ replace(replace(variables['Build.SourceBranch'], 'refs/heads/', ''), '/', '_') }}
    runNugetTasks: ${{ variables.runNugetTasks }}
    serviceName: $(serviceName)
    dotnetVersion: ${{ variables.dotnetVersion }}
    sonarqubeInstance: ${{ parameters.sonarqubeInstance }}
